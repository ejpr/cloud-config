spring:
  mvc:
    view:
      prefix: /WEB-INF/views/
      suffix: .jsp
  jpa:
    properties:
      hibernate:
        proc:
          param_null_passing: true
        dialect: org.hibernate.dialect.Oracle10gDialect
        jdbc:
          fetch_size: 50000
  datasource:
    hikari:
      poolName: pool-PickupHikaricp
      leak-detection-threshold: 11000
      connectionTestQuery: SELECT 1 FROM DUAL
      idleTimeout: 60000
      maxLifetime: 600000
      connectionTimeout: 10000
      minimumIdle: 3
      maximumPoolSize: ${MAX_POOL_SIZE}

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
        exclude: ''
  security:
    enabled: false

shipping:
  microservices:
    configuration:
      business_unit_id: ${SETTINGS_BUSINESS_UNIT_ID:3}
      country_id: ${SETTINGS_COUNTRY_ID:7}
      shipping_method_id: ${SETTINGS_SHIPPING_METHOD_ID:10}
pickup:
  multicd:
    primary: ${MULTICD_PRIMARY:100}
    all: ${MULTICD:100,200}
  backup:
    clic:
      c:
        range: ${PICKUP_CLIC_BACKUP_C_RANGE:90}
    bopis:
      c:
        range: ${PICKUP_BOPIS_BACKUP_C_RANGE:40}
  bopis:
    c:
      range: ${PICKUP_BOPIS_C_RANGE:20}
  store:
    bopis:
      pe: P264
  source: ${PICKUP_SOURCE:Paris.cl}
  activate_cut_off: ${ACTIVATE_CUT_OFF}
  clic:
    c:
      range: ${PICKUP_CLIC_C_RANGE:30}
info:
  app:
    version: V1
    name: Pickup Shipping Method
    description: Aplicacion para calculo de fechas de retiro en tienda


logging:
  level:
    cl:
      cencosud:
        pickupshippingmethod: INFO
  file: /var/logs/pickupshippingmethod.log

springfox:
  documentation:
    swagger:
      v2:
        path: /pickup/v1/spec
api:
  product:
    url: https://product-catalog-service-txd-ecommerce.aws-test.paris.cl/
origin:
  service: ${ORIGIN_SERVICE}
server:
  error:
    whitelabel:
      enabled: 'true'
  port: '8080'
